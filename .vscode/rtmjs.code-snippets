{
	// Place your rtmjsmaker 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

  "rtmjs-train": {
	"prefix": "rtmjstrain",
    "body": [
		"var renderClass = $0;",
		"importPackage(Packages.org.lwjgl.opengl);",
		"importPackage(Packages.jp.ngt.rtm.render);",
		"importPackage(Packages.jp.ngt.ngtlib.util);",
		"\n",
		"function init(par1, par2){\n",
		"\t\n}\n\n",
		"function render(entity, pass, par3){",
		"\tif (entity != null) {\n\n\t}",
		"\n\t\n}"
	],
    "description": "Builds the body of an rtm train script program."
    
  },
  "rtmjs-registerParts": {
	"prefix": "registerparts",
    "body": [
		"$1 = renderer.registerParts(new Parts($2));"
	],
    "description": "registerparts"
    
  },
  "rtmjs-renderparts": {
	"prefix": "renderparts",
    "body": [
		"GL11.glPushMatrix();",
		"$1.render(renderer);",
		"GL11.glPopMatrix();"
	],
    "description": "render parts whithout animation"
    
  },
  "rtmjs-translatef-render": {
	"prefix": "translatef renderparts",
    "body": [
		"GL11.glPushMatrix();",
		"GL11.glTranslatef(X$2, Y$3, Z$4);",
		"$1.render(renderer);",
		"GL11.glPopMatrix();"
	],
    "description": "translatef render"
  },
  "rtmjs-rotate-render": {
	"prefix": "rotate renderparts",
    "body": [
		"GL11.glPushMatrix();",
		"renderer.rotate(angle$2, axis$3, X$4, Y$5, Z$6);",
		"$1.render(renderer);",
		"GL11.glPopMatrix();"
	],
    "description": "rotate render"
  }

}